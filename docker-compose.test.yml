version: '3.8'

services:
  integration-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      # Mount Docker socket for Docker-in-Docker testing
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount source code for development
      - .:/app
      # Mount test output directory
      - ./test_output:/test_output
    environment:
      - MCP_TEST_DATA_DIR=/test_data
      - MCP_TEST_OUTPUT_DIR=/test_output
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      # Use the internal Docker network for remote server tests
      - MCP_REMOTE_SERVER_URL=http://rustdocs-mcp-rust-docs-mcp-server.mcp.svc.cluster.local:3000/sse
    networks:
      - mcp-test-network
    command: >
      sh -c "
        echo 'Starting integration tests in Docker environment...' &&
        echo 'Available runtimes:' &&
        which npx && npx --version &&
        which uvx && uvx --version &&
        which docker && docker --version &&
        echo 'Test data directory contents:' &&
        ls -la /test_data &&
        echo 'Running integration tests...' &&
        cargo test --test integration -- --nocapture
      "

  # Optional: Run a subset of tests
  test-filesystem:
    extends: integration-tests
    command: cargo test --test integration test_filesystem_server_npx -- --nocapture

  test-fetch:
    extends: integration-tests
    command: cargo test --test integration test_fetch_server_uvx -- --nocapture

  test-docker:
    extends: integration-tests
    command: cargo test --test integration test_fetch_server_docker -- --nocapture

  test-http:
    extends: integration-tests
    command: cargo test --test integration test_rust_docs_http_sse_server -- --nocapture

networks:
  mcp-test-network:
    driver: bridge