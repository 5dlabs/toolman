apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "toolman.fullname" . }}
  labels:
    {{- include "toolman.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "toolman.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "toolman.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "toolman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.config.servers.kubernetes.enabled }}
      initContainers:
        - name: setup-kubeconfig
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Setting up kubeconfig, npm cache, and docker data..."
              # Setup kubeconfig
              mkdir -p /data/.kube
              cp /tmp/kubeconfig-secret/KUBECONFIG /data/.kube/config
              chmod 600 /data/.kube/config
              chown -R 1001:2375 /data/.kube
              
              # Setup npm cache in home directory (now directly mounted PVC)
              mkdir -p /home/mcp/.npm
              mkdir -p /home/mcp/.npm/_logs  
              chown -R 1001:2375 /home/mcp
              chmod 755 /home/mcp/.npm
              
              # Setup docker data directory for persistent image storage
              mkdir -p /data/docker-data
              chown -R root:root /data/docker-data
              
              echo "Setup complete: kubeconfig, npm cache, and docker data"
          volumeMounts:
            - name: kubeconfig
              mountPath: /tmp/kubeconfig-secret
              readOnly: true
            - name: data
              mountPath: /data
            - name: home-mcp-pvc
              mountPath: /home/mcp
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "toolman.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- if .Values.config.servers }}
            {{- range $serverName, $serverConfig := .Values.config.servers }}
              {{- if and $serverConfig.secretRef $serverConfig.enabled }}
                {{- range $serverConfig.secretRef.keys }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ $serverConfig.secretRef.name }}
                  key: {{ . }}
                  optional: true
                {{- end }}
              {{- end }}
            {{- end }}
            {{- end }}
          volumeMounts:
            {{- range .Values.volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
            {{- if .Values.config.servers.kubernetes.enabled }}
            - name: kubeconfig
              mountPath: /tmp/kubeconfig-secret
              readOnly: true
            {{- end }}
        # Docker-in-Docker sidecar for Docker-based MCP servers
        - name: docker-daemon
          image: docker:dind
          securityContext:
            privileged: true
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
          volumeMounts:
            - name: docker-sock-dir
              mountPath: /var/run
            - name: docker-data
              mountPath: /var/lib/docker
            - name: data
              mountPath: /data
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- if .configMap }}
          configMap:
            {{- if eq .configMap.name "toolman-config" }}
            name: {{ include "toolman.configMapName" $ }}
            {{- else }}
            name: {{ .configMap.name }}
            {{- end }}
          {{- else if .emptyDir }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "toolman.pvcName" . }}
        {{- end }}
        {{- if .Values.config.servers.kubernetes.enabled }}
        - name: kubeconfig
          secret:
            secretName: {{ .Values.config.servers.kubernetes.secretRef.name }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}