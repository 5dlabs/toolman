{
  "version": "2.0",
  "servers": {
    "filesystem": {
      "name": "Local Filesystem",
      "description": "Access local files via stdio transport",
      "transport": {
        "type": "stdio",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-filesystem", "/workspace"],
        "env": {
          "NODE_ENV": "production"
        }
      },
      "enabled": true
    },
    "github-remote": {
      "name": "GitHub API Server",
      "description": "Remote GitHub MCP server via HTTP",
      "transport": {
        "type": "http",
        "url": "https://mcp-github.example.com",
        "headers": {
          "Authorization": "Bearer ${GITHUB_TOKEN}",
          "X-API-Version": "2024-11-05"
        },
        "timeout_ms": 30000,
        "retry": {
          "max_attempts": 3,
          "backoff_ms": 1000
        }
      },
      "enabled": true
    },
    "ai-assistant": {
      "name": "AI Assistant Stream",
      "description": "Streaming AI assistant via SSE",
      "transport": {
        "type": "sse",
        "url": "https://assistant.example.com/mcp/stream",
        "headers": {
          "X-API-Key": "${ASSISTANT_API_KEY}"
        },
        "reconnect": {
          "enabled": true,
          "max_attempts": 10,
          "delay_ms": 5000
        }
      },
      "enabled": true
    },
    "docker-postgres": {
      "name": "PostgreSQL in Docker",
      "description": "PostgreSQL MCP server running in Docker",
      "transport": {
        "type": "stdio",
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "--network=host",
          "-e", "DATABASE_URL=${DATABASE_URL}",
          "mcp/postgres-server:latest"
        ]
      },
      "enabled": true
    },
    "kubernetes-tools": {
      "name": "Kubernetes Tools",
      "description": "Remote K8s tools via HTTP with mTLS",
      "transport": {
        "type": "http",
        "url": "https://k8s-tools.internal:8443/mcp",
        "tls": {
          "ca_cert": "/config/certs/ca.crt",
          "client_cert": "/config/certs/client.crt",
          "client_key": "/config/certs/client.key",
          "verify": true
        }
      },
      "enabled": false
    }
  }
}